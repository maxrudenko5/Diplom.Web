@model Diplom.ViewModels.SystemAdministration.User.EditUserProfileViewModel

@{
    ViewBag.Title = "Edit User Profile";
}
<div class="block-header">
    <h2>User</h2>
</div>

@using (Html.BeginForm("EditProfile", "User", FormMethod.Post,htmlAttributes: new { enctype ="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    <div class="card">
        <div class="card-header">

        </div>
        <div class="card-body card-padding">
            <div class="form-horizontal">
                <h4>Edit User Profile</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.UserId)
                @Html.HiddenFor(model => model.Photo_200)
                @Html.HiddenFor(model => model.Photo_max)
                <div class="form-group">
                    @Html.LabelFor(model => model.Photo_200, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        <output id="list"><img style="max-height:200px;max-width:200px" src="@Model.Photo_200" class="img-responsive" /></output>
                        <div class="col-sm-3">
                            <input type="file" id="files" name="files" accept="image/*">
                            Максимальный размер изображения 5мб
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Patronymic, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Patronymic, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Patronymic, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-sm-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Skype, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-sm-10">
                        @Html.EditorFor(model => model.Skype, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Skype, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-sm-10 dtp-container">
                        @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control date-picker" } })
                        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div align="center" class="col-md-12" style="">
                    <div class="col-sm-6">
                        @Html.RadioButtonFor(m => m.Sex, Diplom.Domain.Sex.female)
                        <span>@Resources.Resources.RegisterFormFemale</span>
                    </div>
                    <div class="col-sm-6">
                        @Html.RadioButtonFor(m => m.Sex, Diplom.Domain.Sex.male)
                        <span>@Resources.Resources.RegisterFormMale</span>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-10 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="~/scripts/vendors/bootstrap-datetimepicker.min.js"></script>
    <script src="~/scripts/vendors/fileinput/fileinput.min.js"></script>
    <script src="~/scripts/vendors/input-mask/input-mask.min.js"></script>
    <script>
        function handleFileSelect(evt) {
            var files = evt.target.files; // FileList object
            // Loop through the FileList and render image files as thumbnails.
            for (var i = 0, f; f = files[i]; i++) {

                // Only process image files.
                if (!f.type.match('image.*')) {
                    continue;
                }

                var reader = new FileReader();

                // Closure to capture the file information.
                reader.onload = (function (theFile) {
                    return function (e) {
                        // Render thumbnail.
                        var span = document.createElement('span');
                        span.innerHTML = ['<img style="max-height:200px;max-width:200px" class="img-responsive" src="', e.target.result,
                                          '" title="', escape(theFile.name), '"/>'].join('');
                        $("#list").empty();
                        document.getElementById('list').insertBefore(span, null);
                    };
                })(f);

                // Read in the image file as a data URL.
                reader.readAsDataURL(f);
            }
        }

        document.getElementById('files').addEventListener('change', handleFileSelect, false);
    </script>

}